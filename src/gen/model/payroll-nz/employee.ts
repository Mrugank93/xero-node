/**
 * Xero Payroll NZ
 * This is the Xero Payroll API for orgs in New Zealand region.
 *
 * The version of the OpenAPI document: 2.1.3
 * Contact: api@xero.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { Address } from '././address';
import { ValidationError } from '././validationError';

export class Employee {
    /**
    * First name of employee
    */
    'firstName': string;
    /**
    * Last name of employee
    */
    'lastName': string;
    /**
    * Date of birth of the employee (YYYY-MM-DD)
    */
    'dateOfBirth': string;
    /**
    * Start date for an employee (YYYY-MM-DD)
    */
    'startDate'?: string;
    /**
    * The email address for the employee
    */
    'email'?: string;
    /**
    * The employee’s gender. See Employee Gender
    */
    'gender'?: Employee.GenderEnum;
    /**
    * Xero unique identifier for payroll calendar for the employee
    */
    'payrollCalendarID'?: string;
    /**
    * Xero unique identifier for an Employee
    */
    'employeeID'?: string;
    'phoneNumber'?:string;
    'address'?: Address;
    'endDate'?:string;
    'createdDateUTC'?:Date;
    /**
    * Last modified timestamp
    */
    'updatedDateUTC'?: string;
    /**
    * Displays array of validation error messages from the API
    */
    'validationErrors'?: Array<ValidationError>;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "firstName",
            "baseName": "FirstName",
            "type": "string"
        },
        {
            "name": "lastName",
            "baseName": "LastName",
            "type": "string"
        },
        {
            "name": "dateOfBirth",
            "baseName": "DateOfBirth",
            "type": "string"
        },
        {
            "name":"address",
            "baseName":"Address",
            "type":"Address"
        },
        {
            "name": "startDate",
            "baseName": "StartDate",
            "type": "string"
        },
        {
            "name": "endDate",
            "baseName": "EndDate",
            "type": "Date"
        },
        {
            "name": "title",
            "baseName": "Title",
            "type": "string"
        },
        {
            "name": "email",
            "baseName": "Email",
            "type": "string"
        },
        {
            "name": "gender",
            "baseName": "Gender",
            "type": "Employee.GenderEnum"
        },
        {
            "name": "phoneNumber",
            "baseName": "PhoneNumber",
            "type": "string"
        },
        {
            "name": "payrollCalendarID",
            "baseName": "PayrollCalendarID",
            "type": "string"
        },
        {
            "name": "employeeID",
            "baseName": "EmployeeID",
            "type": "string"
        },
        {
            "name": "updatedDateUTC",
            "baseName": "UpdatedDateUTC",
            "type": "string"
        },
        {
            "name": "createdDateUTC",
            "baseName": "CreatedDateUTC",
            "type": "Date"
        },
        {
            "name": "validationErrors",
            "baseName": "ValidationErrors",
            "type": "Array<ValidationError>"
        }    ];

    static getAttributeTypeMap() {
        return Employee.attributeTypeMap;
    }
}

export namespace Employee {
    export enum GenderEnum {
        N = <any> 'N',
        M = <any> 'M',
        F = <any> 'F',
        I = <any> 'I'
    }
}
