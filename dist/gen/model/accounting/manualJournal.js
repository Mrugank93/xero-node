"use strict";
/**
 * Accounting API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.1.3
 * Contact: api@xero.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ManualJournal = void 0;
let ManualJournal = /** @class */ (() => {
    class ManualJournal {
        static getAttributeTypeMap() {
            return ManualJournal.attributeTypeMap;
        }
    }
    ManualJournal.discriminator = undefined;
    ManualJournal.attributeTypeMap = [
        {
            "name": "narration",
            "baseName": "Narration",
            "type": "string"
        },
        {
            "name": "journalLines",
            "baseName": "JournalLines",
            "type": "Array<ManualJournalLine>"
        },
        {
            "name": "date",
            "baseName": "Date",
            "type": "string"
        },
        {
            "name": "lineAmountTypes",
            "baseName": "LineAmountTypes",
            "type": "LineAmountTypes"
        },
        {
            "name": "status",
            "baseName": "Status",
            "type": "ManualJournal.StatusEnum"
        },
        {
            "name": "url",
            "baseName": "Url",
            "type": "string"
        },
        {
            "name": "showOnCashBasisReports",
            "baseName": "ShowOnCashBasisReports",
            "type": "boolean"
        },
        {
            "name": "hasAttachments",
            "baseName": "HasAttachments",
            "type": "boolean"
        },
        {
            "name": "updatedDateUTC",
            "baseName": "UpdatedDateUTC",
            "type": "Date"
        },
        {
            "name": "manualJournalID",
            "baseName": "ManualJournalID",
            "type": "string"
        },
        {
            "name": "statusAttributeString",
            "baseName": "StatusAttributeString",
            "type": "string"
        },
        {
            "name": "warnings",
            "baseName": "Warnings",
            "type": "Array<ValidationError>"
        },
        {
            "name": "validationErrors",
            "baseName": "ValidationErrors",
            "type": "Array<ValidationError>"
        },
        {
            "name": "attachments",
            "baseName": "Attachments",
            "type": "Array<Attachment>"
        }
    ];
    return ManualJournal;
})();
exports.ManualJournal = ManualJournal;
(function (ManualJournal) {
    let StatusEnum;
    (function (StatusEnum) {
        StatusEnum[StatusEnum["DRAFT"] = 'DRAFT'] = "DRAFT";
        StatusEnum[StatusEnum["POSTED"] = 'POSTED'] = "POSTED";
        StatusEnum[StatusEnum["DELETED"] = 'DELETED'] = "DELETED";
        StatusEnum[StatusEnum["VOIDED"] = 'VOIDED'] = "VOIDED";
        StatusEnum[StatusEnum["ARCHIVED"] = 'ARCHIVED'] = "ARCHIVED";
    })(StatusEnum = ManualJournal.StatusEnum || (ManualJournal.StatusEnum = {}));
})(ManualJournal = exports.ManualJournal || (exports.ManualJournal = {}));
exports.ManualJournal = ManualJournal;
//# sourceMappingURL=manualJournal.js.map