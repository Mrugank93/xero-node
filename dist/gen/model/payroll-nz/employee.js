"use strict";
/**
 * Xero Payroll NZ
 * This is the Xero Payroll API for orgs in New Zealand region.
 *
 * The version of the OpenAPI document: 2.1.3
 * Contact: api@xero.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.Employee = void 0;
let Employee = /** @class */ (() => {
    class Employee {
        static getAttributeTypeMap() {
            return Employee.attributeTypeMap;
        }
    }
    Employee.discriminator = undefined;
    Employee.attributeTypeMap = [
        {
            "name": "firstName",
            "baseName": "FirstName",
            "type": "string"
        },
        {
            "name": "lastName",
            "baseName": "LastName",
            "type": "string"
        },
        {
            "name": "dateOfBirth",
            "baseName": "DateOfBirth",
            "type": "string"
        },
        {
            "name": "address",
            "baseName": "Address",
            "type": "Address"
        },
        {
            "name": "startDate",
            "baseName": "StartDate",
            "type": "string"
        },
        {
            "name": "endDate",
            "baseName": "EndDate",
            "type": "Date"
        },
        {
            "name": "title",
            "baseName": "Title",
            "type": "string"
        },
        {
            "name": "email",
            "baseName": "Email",
            "type": "string"
        },
        {
            "name": "gender",
            "baseName": "Gender",
            "type": "Employee.GenderEnum"
        },
        {
            "name": "phoneNumber",
            "baseName": "PhoneNumber",
            "type": "string"
        },
        {
            "name": "payrollCalendarID",
            "baseName": "PayrollCalendarID",
            "type": "string"
        },
        {
            "name": "employeeID",
            "baseName": "EmployeeID",
            "type": "string"
        },
        {
            "name": "updatedDateUTC",
            "baseName": "UpdatedDateUTC",
            "type": "string"
        },
        {
            "name": "createdDateUTC",
            "baseName": "CreatedDateUTC",
            "type": "Date"
        },
        {
            "name": "validationErrors",
            "baseName": "ValidationErrors",
            "type": "Array<ValidationError>"
        }
    ];
    return Employee;
})();
exports.Employee = Employee;
(function (Employee) {
    let GenderEnum;
    (function (GenderEnum) {
        GenderEnum[GenderEnum["N"] = 'N'] = "N";
        GenderEnum[GenderEnum["M"] = 'M'] = "M";
        GenderEnum[GenderEnum["F"] = 'F'] = "F";
        GenderEnum[GenderEnum["I"] = 'I'] = "I";
    })(GenderEnum = Employee.GenderEnum || (Employee.GenderEnum = {}));
})(Employee = exports.Employee || (exports.Employee = {}));
exports.Employee = Employee;
//# sourceMappingURL=employee.js.map